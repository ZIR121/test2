Процедура ОбработкаПроведения(Отказ, Режим)

    // Чтение метода списания себестоимости
    МетодСписания = РегистрыСведений.УчетнаяПолитика.ПолучитьПоследнее(Дата).МетодСписания;

    Если МетодСписания.Пустая() Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Учетная политика не определена!";
        Сообщение.Сообщить();

        Отказ = Истина;
        Возврат;
    КонецЕсли;

	Если МетодСписания = Перечисления.МетодыСписанияУчетнойПолитики.FIFO Тогда
		
		СортировкаПартий = ?(МетодСписания = Перечисления.МетодыСписанияУчетнойПолитики.FIFO, "", " УБЫВ");
		
		//Движения.Продажи.Записывать = Истина;
		Движения.ОстаткиНоменклатуры.Записывать = Истина;
		
		// Удаление предыдущих движений документа
		Движения.ОстаткиНоменклатуры.Записать();
		
		// Блокировка данных
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = Товары;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		
		Блокировка.Заблокировать();
		
		// Чтение партий, доступных для списания. Сортировка согласно метода списания себестоимости
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК Сумма
		|ПОМЕСТИТЬ РасходнаяНакладная
		|ИЗ
		|	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасходнаяНакладная.Номенклатура КАК Номенклатура,
		|	РасходнаяНакладная.Количество КАК Количество,
		|	РасходнаяНакладная.Сумма КАК Сумма,
		|	ОстаткиНоменклатурыОстатки.Партия КАК Партия,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.СтоимостьОстаток, 0) КАК СтоимостьОстаток
		|ИЗ
		|	РасходнаяНакладная КАК РасходнаяНакладная
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				&МоментВремени,
		|				Номенклатура В
		|					(ВЫБРАТЬ
		|						РасходнаяНакладная.Номенклатура
		|					ИЗ
		|						РасходнаяНакладная)) КАК ОстаткиНоменклатурыОстатки
		|		ПО РасходнаяНакладная.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОстаткиНоменклатурыОстатки.Партия.МоментВремени" + СортировкаПартий + "
		|ИТОГИ
		|   МАКСИМУМ(Количество),
		|   МАКСИМУМ(Сумма),
		|   СУММА(КоличествоОстаток)
		|ПО
		|   Номенклатура";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		
		Результат = Запрос.Выполнить();
		ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			ТекСебестоимость = 0;
								
			ОсталосьСписать = ВыборкаНоменклатура.Количество;
			ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
			
			Пока (ОсталосьСписать > 0) И ВыборкаДетальныеЗаписи.Следующий() Цикл
				Списываем = Мин(ОсталосьСписать,  ВыборкаДетальныеЗаписи.КоличествоОстаток);
				
				// регистр ОстаткиНоменклатуры Расход
				Движение = Движения.ОстаткиНоменклатуры.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.Партия = ВыборкаДетальныеЗаписи.Партия;
				Движение.Количество = Списываем;
				Движение.Стоимость = (Списываем * ВыборкаДетальныеЗаписи.СтоимостьОстаток) /
				ВыборкаДетальныеЗаписи.КоличествоОстаток;
				Движение.Сумма = Движение.Количество * Движение.Стоимость; 
				ТекСебестоимость = ТекСебестоимость + Движение.Стоимость;
				ОсталосьСписать = ОсталосьСписать - Списываем;
			КонецЦикла;
			//КонецЕсли;
		КонецЦикла;
		
	Иначе
		Если МетодСписания = Перечисления.МетодыСписанияУчетнойПолитики.ПоСреднейСебестоимости Тогда
			
		
		Движения.ОстаткиНоменклатуры.Записывать = Истина;
		
		// Удаление предыдущих движений документа
		Движения.ОстаткиНоменклатуры.Записать();
		
		// Блокировка данных
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = Товары;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		
		Блокировка.Заблокировать();
		
		// Чтение партий, доступных для списания. Сортировка согласно метода списания себестоимости
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК Сумма
		|ПОМЕСТИТЬ РасходнаяНакладная
		|ИЗ
		|	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасходнаяНакладная.Номенклатура КАК Номенклатура,
		|	РасходнаяНакладная.Количество КАК Количество,
		|	РасходнаяНакладная.Сумма КАК Сумма,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.СтоимостьОстаток, 0) КАК СтоимостьОстаток
		|ИЗ
		|	РасходнаяНакладная КАК РасходнаяНакладная
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				&МоментВремени,
		|				Номенклатура В
		|					(ВЫБРАТЬ
		|						РасходнаяНакладная.Номенклатура
		|					ИЗ
		|						РасходнаяНакладная)) КАК ОстаткиНоменклатурыОстатки
		|		ПО РасходнаяНакладная.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладная.Номенклатура,
		|	РасходнаяНакладная.Количество,
		|	РасходнаяНакладная.Сумма,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0),
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.СтоимостьОстаток, 0)
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	МАКСИМУМ(Сумма),
		|	СУММА(КоличествоОстаток)
		|ПО
		|	Номенклатура";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		
		Результат = Запрос.Выполнить();
		ВыборкаНоменклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			ТекСебестоимость = 0;
			
					
			ОсталосьСписать = ВыборкаНоменклатура.Количество;
			ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
			
			Пока (ОсталосьСписать > 0) И ВыборкаДетальныеЗаписи.Следующий() Цикл
				Списываем = Мин(ОсталосьСписать,  ВыборкаДетальныеЗаписи.КоличествоОстаток);
				
				// регистр ОстаткиНоменклатуры Расход
				Движение = Движения.ОстаткиНоменклатуры.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.Количество = Списываем;
				Движение.Стоимость = (Списываем * ВыборкаДетальныеЗаписи.СтоимостьОстаток) /
				ВыборкаДетальныеЗаписи.КоличествоОстаток;
				Движение.Сумма = Движение.Количество * Движение.Стоимость; 
				ТекСебестоимость = ТекСебестоимость + Движение.Стоимость;
				ОсталосьСписать = ОсталосьСписать - Списываем;
			КонецЦикла;
						
			КонецЦикла;
			
			
		КонецЕсли;
			
	
	
КонецЕсли;



КонецПроцедуры
